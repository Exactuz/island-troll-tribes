package ChangeLog
import LinkedList
import LinkedListModule
import HashMap
import StringUtils
import ChatCommands
import ClosureTimers

public class ChangeLog
    use LinkedListModule

    static let versions = new HashMap<string, thistype>()

    int major
    int minor
    char rev
    let changes = new LinkedList<string>()

    construct(int major, int minor, int rev)
        this.major = major
        this.minor = minor
        this.rev = char(rev)
        versions.put(this.getVersionString(), this)

    function getVersionString() returns string
        return "v{0}.{1}{2}".format(this.major.toString(), this.minor.toString(), this.rev.toString())

    function add(string change)
        this.changes.add(change)

    static function getVersion(string which) returns thistype
        if versions.has(which)
            return versions.get(which)
        return null


init
    registerCommandAll("changelog") (triggerPlayer, args) ->
        var changelog = ChangeLog.last
        if args.size() > 1
            changelog = ChangeLog.getVersion(args.get(1))
        
        let title = "{0}Change Log for {1}{2}".format(ENERGY_COLOR, GOLD_COLOR, changelog.getVersionString())
        printTimedToPlayer(title, 15, triggerPlayer)
        for change in changelog.changes
            printTimedToPlayer("{0}{1}{2}".format(DASH, GENERAL_COLOR, change), 15, triggerPlayer)

    nullTimer() ->
        for changelog in ChangeLog
            let title = "{0}Change Log for {1}{2}".format(SPECIAL_COLOR, GOLD_COLOR, changelog.getVersionString())
            let changes = changelog.changes.foldl<string>("", (string change, string memo) -> begin
                return memo + DASH + GENERAL_COLOR + change + "|n"
            end)
            CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, title, changes, "ReplaceableTextures\\CommandButtons\\BTNBerserkForTrolls.blp")
