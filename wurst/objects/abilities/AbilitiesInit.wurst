package AbilitiesInit

// Standard-library imports:
import Assets
import BuffObjEditing
import ClosureTimers
import ClosureEvents
import ClosureForGroups
import ChannelAbilityPreset
import GroupUtils
import HashMap
import HashSet
import InstantDummyCaster
import OnUnitEnterLeave
import OrderIds

// Third-party imports:
import Lodash

// Local imports:
import GameStates
import LocalObjectIDs
import ToolTipsUtils
import UnitExtensions
import DamageListeners
import HealingSystem
import ThiefsPocket
import ColorUtils
import LinkedList
import LocalAssets
import SimError
import DummyCaster
import DummyRecycler

//these abilities have a lot of levels to simulate scaling with int which causes a lag spike the first time they are used
let ABILITIES_TO_INITIATE=asList(ABILITY_LIGHTNING_SHIELD, ABILITY_ANTI_MAGIC)
IterableMap<int, int> abilitiesToInitiate = new IterableMap<int, int>()
    ..put(ABILITY_LIGHTNING_SHIELD, OrderIds.lightningshield)
    ..put(ABILITY_ANTI_MAGIC, OrderIds.antimagicshell)


function initiateAbilities()
    var i = 0
    let dummy = createUnit(
        players[PLAYER_NEUTRAL_PASSIVE],
        DUMMY_UNIT_ID,
        vec2(5., 5.))

    doPeriodicallyCounted(1., ABILITIES_TO_INITIATE.size()) (CallbackCounted cb) ->
        let abilId = ABILITIES_TO_INITIATE.get(i)
        let order  = abilitiesToInitiate.get(abilId)
        InstantDummyCaster.castTarget(players[PLAYER_NEUTRAL_PASSIVE], abilId, 11, order, dummy, dummy.getPos())
        i+=1
    dummy.remove()    

init
    //GameStates.gameplay.onEnter() state ->
    doAfter(10.) -> 
        initiateAbilities()