package DevourAbilitiesDefinitions

// Standard lib Imports:
import ChannelAbilityPreset
import ClosureEvents
import HashMap
import Assets
import OrderIds
import ErrorHandling
import SoundUtils

// Local Imports:
import UnitEntity
import Hostile
import SimError
import HealingSystem
import PlayerExtensions
import LocalObjectIDs
import ColorUtils
import ToolTipsUtils
import MoveCorpses
import LocalAssets
import HealingItems
import BuffObjEditing
import HashList
import ClosureTimers
import BonusHandler
import UpgradeObjEditing

public let DEVOUR_SOUND = new SoundDefinition(Sounds.devour, false, true)
public let DEVOUR_THRESHOLD = 60.

let COOLDOWN = 60.
    
let TT_NORM = "Devour"
let TT_EXT = "" +
    "Completely devour an elk, restoring 3 raw meat." +
    "\nDire wolf swallows up and digests every part of the animal, therefore, no hides " +
    ", bones nor corpses are dropped upon the animal death."+
    "\nDevouring a hostile animal will unlock a corresponding passive, you can freely switch between them but only one can be active at a time."+
    "\nHas {0} seconds cooldown.".format(COOLDOWN.toString().color(COLOR_LIGHT_BLUE))

public IterableMap<int, int> dummyToAbility = new IterableMap<int, int>()
    ..put(ABILITY_DEVOUR_SNAKE_DUMMY, ABILITY_DEVOUR_SNAKE)
    ..put(ABILITY_DEVOUR_WOLF_DUMMY, ABILITY_DEVOUR_WOLF)
    ..put(ABILITY_DEVOUR_BEAR_DUMMY, ABILITY_DEVOUR_BEAR)
    ..put(ABILITY_DEVOUR_PANTHER_DUMMY, ABILITY_DEVOUR_PANTHER)

public IterableMap<int, int> targetToAbility = new IterableMap<int, int>()
    ..put(UNIT_SNAKE, ABILITY_DEVOUR_SNAKE)
    ..put(UNIT_JUNGLE_WOLF, ABILITY_DEVOUR_WOLF)
    ..put(UNIT_JUNGLE_BEAR, ABILITY_DEVOUR_BEAR)
    ..put(UNIT_PANTHER, ABILITY_DEVOUR_PANTHER)
    ..put(UNIT_ELDER_PANTHER, ABILITY_DEVOUR_PANTHER)

public let WOLF_VORACITY_CHARGE_BONUS = 3
public let SNAKE_EVASION_CHANCE = 0.1
public let BEAR_ARMOUR_BONUS = 2
public let PANTHER_MOVEMENT_SPEED_BONUS = 50.
public let PANTHER_MOVEMENT_SPEED_DURATION = 1.
public let TT_ABILITY_SNAKE = "Snake Reflexes"
public let TT_ABILITY_WOLF = "Wolf Voracity"
public let TT_ABILITY_BEAR = "Thick Fur"
public let TT_ABILITY_PANTHER = "Thrill of the Hunt"
public let TT_ABILITY_SNAKE_EXT = "Gives a {0} chance to avoind an attack.".format(SNAKE_EVASION_CHANCE.toToolTipLightBlue())
public let TT_ABILITY_WOLF_EXT = "Increases maximum Ravenous Beast charges by {0}.".format(WOLF_VORACITY_CHARGE_BONUS.toString().color(COLOR_GOLD_STR))
public let TT_ABILITY_BEAR_EXT = "Increases armour by {0} and removes heat and health cost for sleeping outside.".format(BEAR_ARMOUR_BONUS.toString().color(COLOR_ORANGE))
public let TT_ABILITY_PANTHER_EXT = "Increases your movement speed by {0} for {1} second after attacking an enemy.".format(PANTHER_MOVEMENT_SPEED_BONUS.toToolTipOrange(), PANTHER_MOVEMENT_SPEED_DURATION.toToolTipLightBlue())


public let BUFF_DEVOUR_SNAKE = compiletime(
    createDummyBuffObject(TT_ABILITY_SNAKE.color(COLOR_GREEN), TT_ABILITY_SNAKE_EXT, LocalIcons.bTNWindSerpentPassive).abilId
)
public let BUFF_DEVOUR_WOLF = compiletime(
    createDummyBuffObject(TT_ABILITY_WOLF.color(COLOR_GREEN), TT_ABILITY_WOLF_EXT, LocalIcons.bTNTimberWolfPassive).abilId
)
public let BUFF_DEVOUR_BEAR = compiletime(
    createDummyBuffObject(TT_ABILITY_BEAR.color(COLOR_GREEN), TT_ABILITY_BEAR_EXT, LocalIcons.bTNFrostBearPassive).abilId
)
public let BUFF_DEVOUR_PANTHER = compiletime(
    createDummyBuffObject(TT_ABILITY_PANTHER.color(COLOR_GREEN), TT_ABILITY_PANTHER_EXT, LocalIcons.bTNPantherPassive).abilId
)


@compiletime function createDevourSpell() returns ChannelAbilityPreset
    return new ChannelAbilityPreset(ABILITY_DIRE_WOLF_DEVOUR, 1, true)
        ..presetTargetTypes(Targettype.UNIT)
        ..setName(TT_NORM)
        ..setHotkeyNormal("R")
        ..setTooltipNormal(1, TT_NORM)
        ..setTooltipNormalExtended(1, TT_EXT)
        ..presetCooldown(lvl -> COOLDOWN)
        ..presetManaCost(lvl -> 0)
        ..presetCastRange(lvl -> 128)
        ..presetButtonPosNormal(0, 3)
        ..setFollowThroughTime(1, 0)
        ..setIconNormal(LocalIcons.btnDireWolfDevour)
        ..setTargetsAllowed(1, commaList(
            TargetsAllowed.enemies,
            TargetsAllowed.nonhero,
            TargetsAllowed.organic,
            TargetsAllowed.nonancient
        ))
        ..setAnimationNames("stand")
        ..setBaseOrderID(1, "creepdevour")



@compiletime function createAbilityDevourPantherThrill()
    new AbilityDefinitionMoveSpeedBonus(ABILITY_DEVOUR_PANTHER_THRILL)
        ..setLevels(1)
        ..presetMovementSpeedBonus(lvl->50)     
        ..setName(TT_ABILITY_PANTHER)
        ..setEditorSuffix("(Wurst)")

@compiletime function createUpgradeDefinitions()
    new UpgradeDefinition(UPGD_DEVOUR_SNAKE_DUMMY)
        ..setName(1, "Devoured Snake")
        ..setLevels(1)
        ..setIcon(1, Icons.bTNNagaUnBurrow)
        ..addEffectAbilityLevelBonus(0, 1, ABILITY_DEVOUR_SNAKE_DUMMY.toRawCode())

    new UpgradeDefinition(UPGD_DEVOUR_WOLF_DUMMY)
        ..setName(1, "Devoured Wolf")
        ..setLevels(1)
        ..setIcon(1, Icons.bTNNagaUnBurrow)
        ..addEffectAbilityLevelBonus(0, 1, ABILITY_DEVOUR_SNAKE_DUMMY.toRawCode())

    new UpgradeDefinition(UPGD_DEVOUR_BEAR_DUMMY)
        ..setName(1, "Devoured Snake")
        ..setLevels(1)
        ..setIcon(1, Icons.bTNNagaUnBurrow)
        ..addEffectAbilityLevelBonus(0, 1, ABILITY_DEVOUR_SNAKE_DUMMY.toRawCode())

    new UpgradeDefinition(UPGD_DEVOUR_PANTHER_DUMMY)
        ..setName(1, "Devoured Panther")
        ..setLevels(1)
        ..setIcon(1, Icons.bTNNagaUnBurrow)
        ..addEffectAbilityLevelBonus(0, 1, ABILITY_DEVOUR_SNAKE_DUMMY.toRawCode())

@compiletime function dummyDevourAbilities()
    new ChannelAbilityPreset(ABILITY_DEVOUR_SNAKE_DUMMY, 1, true)
        ..presetTooltipNormalExtended(lvl -> TT_ABILITY_SNAKE_EXT)
        ..presetTooltipNormal(lvl ->TT_ABILITY_SNAKE)
        ..setEditorSuffix("(Wurst)")
        ..setIconNormal(LocalIcons.bTNWindSerpentPassive)
        ..presetButtonPosNormal(0, 1)
        ..presetHotkey("A")
        ..setCheckDependencies(true)
        ..setRequirements(UPGD_DEVOUR_SNAKE_DUMMY.toRawCode())
        ..setBaseOrderID(1, "divineshield")
        ..setCastingTime(1, 0.)


    new ChannelAbilityPreset(ABILITY_DEVOUR_WOLF_DUMMY, 1, true)
        ..presetTooltipNormalExtended(lvl -> TT_ABILITY_WOLF_EXT)
        ..presetTooltipNormal(lvl ->TT_ABILITY_WOLF)
        ..setEditorSuffix("(Wurst)")
        ..setIconNormal(LocalIcons.bTNTimberWolfPassive)
        ..presetButtonPosNormal(1, 1)
        ..presetHotkey("S")
        ..setCheckDependencies(true)
        ..setRequirements(UPGD_DEVOUR_WOLF_DUMMY.toRawCode())
        ..setBaseOrderID(1, "avatar")
        ..setCastingTime(1, 0.)


    new ChannelAbilityPreset(ABILITY_DEVOUR_BEAR_DUMMY, 1, true)
        ..setTooltipNormal(1, TT_ABILITY_BEAR)
        ..setTooltipNormalExtended(1, TT_ABILITY_BEAR_EXT)
        ..setEditorSuffix("(Wurst)")
        ..setIconNormal(LocalIcons.bTNFrostBearPassive)
        ..presetButtonPosNormal(2, 1)
        ..presetHotkey("D")
        ..setCheckDependencies(true)
        ..setRequirements(UPGD_DEVOUR_BEAR_DUMMY.toRawCode())
        ..setBaseOrderID(1, "defend")
        ..setCastingTime(1, 0.)

    new ChannelAbilityPreset(ABILITY_DEVOUR_PANTHER_DUMMY, 1, true)
        ..setTooltipNormal(1, TT_ABILITY_PANTHER)
        ..setTooltipNormalExtended(1, TT_ABILITY_PANTHER_EXT)
        ..setEditorSuffix("(Wurst)")
        ..setIconNormal(LocalIcons.bTNPantherPassive)
        ..presetButtonPosNormal(3, 1)
        ..presetHotkey("F")
        ..setCheckDependencies(true)
        ..setRequirements(UPGD_DEVOUR_PANTHER_DUMMY.toRawCode())
        ..setBaseOrderID(1, "immolate")
        ..setCastingTime(1, 0.) 

@compiletime function devourAbilities()
    new AbilityDefinitionEvasion(ABILITY_DEVOUR_SNAKE)
        ..setChancetoEvade(1, SNAKE_EVASION_CHANCE)
        ..setName("Snake Reflexes")
        ..setTooltipNormal(1, "Snake Reflexes")
        ..setIconNormal(LocalIcons.bTNWindSerpentPassive)
        ..setTooltipNormalExtended(1, TT_ABILITY_SNAKE_EXT)
        ..setEditorSuffix("(Wurst)")

    new AbilityDefinitionDefenseBonusPlus1(ABILITY_DEVOUR_BEAR)
        ..setDefenseBonus(1, 2)
        ..setName("Thick Fur")
        ..setEditorSuffix("(Wurst)")

    new AbilityDefinitionDefenseBonusPlus1(ABILITY_DEVOUR_WOLF)
        ..setDefenseBonus(1, 0)
        ..setName("Wolf Voracity")
        ..setEditorSuffix("(Wurst)")

    new AbilityDefinitionDefenseBonusPlus1(ABILITY_DEVOUR_PANTHER)
        ..setDefenseBonus(1, 0)
        ..setName("Thrill of the Hunt")
        ..setEditorSuffix("(Wurst)")

