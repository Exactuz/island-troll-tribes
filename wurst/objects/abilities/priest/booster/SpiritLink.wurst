package SpiritLink

import AbilityObjEditing
import Assets
import ToolTipsUtils
import Lodash
import LocalObjectIDs
import ObjectIdGenerator
import ColorUtils

let BUFF_ID = compiletime(BUFF_ID_GEN.next())
let COOLDOWN = 40.
let MANACOST = 40
let DURATION = 20.
let AOE = 2000.
let UNIT_CAP = 2
let TOOLTIP_NORM = "Spirit Link"

let TT_EXTENDED = "Links spirits of {0} units, splitting any damage taken between them.".format(UNIT_CAP.toString().color(COLOR_ORANGE))+
                  "\nLasts {0} seconds, Has {1} seconds cooldown.".format(DURATION.toToolTipLightBlue(), COOLDOWN.toToolTipLightBlue())

class SpiritLink extends AbilityDefinitionSpiritLink
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId)
        this.setIconNormal(Icons.bTNSpiritLink)
        this.setCooldown(1, COOLDOWN)
        this.setDurationHero(1, DURATION)
        this.setDurationNormal(1, DURATION)
        this.setManaCost(1, MANACOST)
        this.setAreaofEffect(1, AOE)
        this.setMaximumNumberofTargets(1, UNIT_CAP)
        this.setDistributedDamageFactor(1, 0.01)
        this.setName(TOOLTIP_NORM)
        this.setHotkeyNormal(hotkey)
        this.setTooltipNormalExtended(1, TT_EXTENDED)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)

@compiletime function createSpells()
    new SpiritLink(ABILITY_SPIRIT_LINK, "A", new Pair(0, 1))
