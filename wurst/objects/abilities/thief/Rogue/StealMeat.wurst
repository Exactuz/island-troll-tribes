package StealMeat

// Standard-library imports:
import Assets
import BuffObjEditing
import ClosureTimers
import ClosureEvents
import ClosureForGroups
import ChannelAbilityPreset
import GroupUtils
import HashMap
import HashSet
import InstantDummyCaster
import OnUnitEnterLeave
import OrderIds

// Third-party imports:
import Lodash

// Local imports:
import LocalObjectIDs
import ToolTipsUtils
import UnitExtensions
import DamageListeners
import HealingSystem
import ThiefsPocket
import ColorUtils
import LocalAssets
import SimError

let COOLDOWN = 30.
let TELE_STEAL_CAST_RANGE = 500.
let TELE_STEAL_MANA_COST = 20

let TT_STEAL_MEAT ="Steal a piece of meat from a closest enemy in {0} range.".format(TELE_STEAL_CAST_RANGE.toString().color(ENERGY_COLOR))+ 
                    " If your inventory is full, it is gonna be automatically consumed."+
                    "\n{0} seconds cooldown.".format(COOLDOWN.toString().color(ENERGY_COLOR))
let TT_TELE_STEAL_MEAT ="\n\nTele-thief's mastery over dimentional magic greatly increases range of this ability".color(ENERGY_COLOR)



@compiletime function createStealMeatAbility()
    new ChannelAbilityPreset(ABILITY_STEAL_MEAT, 1, true)
        ..presetTooltipNormal(lvl -> "Steal Meat")
        ..presetTooltipNormalExtended(lvl-> TT_STEAL_MEAT)        
        ..presetCastingTime(lvl ->0.1)
        ..presetCastRange(lvl -> 150)
        ..presetCooldown(lvl -> 30)
        ..presetHotkey("R")
        ..setButtonPositionNormalX(3)
        ..setButtonPositionNormalY(0)
        ..presetTargetTypes(Targettype.UNIT)
        ..setIconNormal(LocalIcons.bTNStealMeat)
        ..presetTargetsAllowed(lvl ->commaList(
            TargetsAllowed.ground,
            TargetsAllowed.enemies,
            TargetsAllowed.vulnerable,
            TargetsAllowed.alive,
            TargetsAllowed.organic,
            TargetsAllowed.hero
        )) 



@compiletime function createTeleStealMeatAbility()
    new ChannelAbilityPreset(ABILITY_TELE_STEAL_MEAT, 1, true)
        ..presetTooltipNormal(lvl -> "Tele-Steal Meat")
        ..presetManaCost(lvl->TELE_STEAL_MANA_COST)
        ..presetTooltipNormalExtended(lvl-> TT_STEAL_MEAT+TT_TELE_STEAL_MEAT)   
        ..presetCooldown(lvl -> COOLDOWN)
        ..presetHotkey("R")
        ..setButtonPositionNormalX(3)
        ..setButtonPositionNormalY(0)
        ..setIconNormal(LocalIcons.bTNTeleStealMeat)
        ..setTooltipNormal(1, makeToolTipNorm("R", "Tele-Steal Meat"))
        ..setCastingTime(1, 0.)


function onStealCast(unit caster, unit target)
    let itm = target.getItemById(ITEM_COOKED_MEAT)
    if itm == null
        doAfter(ANIMATION_PERIOD) -> 
            caster.endAbilityCooldown(ABILITY_STEAL_MEAT)
            caster.endAbilityCooldown(ABILITY_TELE_STEAL_MEAT)
            if caster.hasAbility(ABILITY_TELE_STEAL_MEAT)
                caster.setMana(caster.getMana()+TELE_STEAL_MANA_COST)
        return
    let charges = itm.getCharges()
    if charges > 1
        itm.setCharges(charges-1)
    else 
        itm.remove()
    for itm2 in caster.getInventory()
        if itm2.getTypeId() == ITEM_COOKED_MEAT and itm2.getCharges()<10
            itm2.setCharges(itm2.getCharges()+1)
            return
    if caster.isInventoryFull()
        new HealingInstance(caster, 50, HealingType.ITEM)
        return
    let itm3 = createItem(ITEM_COOKED_MEAT, caster.getPos())
    stolenItems.add(itm3)
    caster.addItemHandle(itm3)

function onTeleStealCast(unit caster)
    ENUM_GROUP.enumUnitsInRange(
        caster.getPos(),
        TELE_STEAL_CAST_RANGE,
        Filter(-> GetFilterUnit().hasItemById(ITEM_COOKED_MEAT))
    )
    ENUM_GROUP.remove(caster)
    if ENUM_GROUP.isEmpty()
        doAfter(ANIMATION_PERIOD*2)-> 
            caster.endAbilityCooldown(ABILITY_TELE_STEAL_MEAT)
            caster.setMana(caster.getMana()+TELE_STEAL_MANA_COST)
            simError(caster.getOwner(), "There is no valid target in radius.")
        return
    var distance = TELE_STEAL_CAST_RANGE
    unit target = null
    for each in ENUM_GROUP
        let minimumDistance = each.getPos().distanceTo(caster.getPos())
        if minimumDistance < distance and each.isEnemyOf(caster.getOwner())
            distance = minimumDistance
            target = each
    if target == null
        doAfter(ANIMATION_PERIOD*2)-> 
            caster.endAbilityCooldown(ABILITY_TELE_STEAL_MEAT)
            caster.setMana(caster.getMana()+TELE_STEAL_MANA_COST)        
        simError(caster.getOwner(), "There is no valid target in radius.")
        return        
    flashEffect(Abilities.blinkCaster, target.getPos())
    doAfter(ANIMATION_PERIOD) -> 
        flashEffect(Abilities.blinkTarget, caster.getPos())    
    onStealCast(caster, target)


init 
    EventListener.onTargetCast(ABILITY_STEAL_MEAT) (unit caster, unit target) ->
        onStealCast(caster, target)
    EventListener.onTargetCast(ABILITY_TELE_STEAL_MEAT) (unit caster, unit target) ->
        onTeleStealCast(caster)        
        
    