package CoatDefinition


// Standard lib Imports:
import AbilityObjEditing
import Assets
import ClosureEvents
import ClosureForGroups
import ColorUtils
import InstantDummyCaster
import ObjectIdGenerator
import ObjectIds
import Orders

// Local Imports:
import Items
import LocalAssets
import LocalItemObjEditing
import LocalObjectIDs
import ToolTipsUtils
import UnitExtensions
import MakruraCuirass
import HealingItems
import CustomItemDefinition
import ObjectIDManager

constant ABIL_STATS_BATTLE            = compiletime(ABIL_ID_GEN.next())
public constant ABIL_SPELL_RESISTANCE_BATTLE = compiletime(ABIL_ID_GEN.next())
constant ABIL_CAST_BATTLE             = compiletime(ABIL_ID_GEN.next())
constant ABIL_CAST_STEEL              = compiletime(ABIL_ID_GEN.next())
constant ABIL_HARDENED_SCALE          = compiletime(ABIL_ID_GEN.next())
public constant ABILITY_WOLFS_VORACITY_COAT_ACTIVE = compiletime(ABIL_ID_GEN.next())
public constant ABILITY_BEARS_PRESENCE_AURA = compiletime(ABIL_ID_GEN.next())
constant ABILITY_BEARSKIN_COAT_NORMAL = compiletime(ABIL_ID_GEN.next())

constant BATTLE_COOLDOWN = 75.
constant STEEL_COOLDOWN = 90.
constant ABILITY_RADIUS = 800.

constant BATTLE_ARMOR_SPELL_RESISTANCE_FACTOR = 0.30
constant SCALE_COAT_RETURN_DAMAGE_FACTOR = 0.35

constant TT_BASIC  =  "\n\nBasic Coat|r".color(COLOR_ORANGE) + "\n\nAll basic Coat transmute into the same Bone/Iron/Steel Coat.".color(COLOR_YELLOW)
constant TT_COMMON = "Increases Strength by {0}, Intelligence by {1}, Armor by {2}"
constant TT_SKIN   = "A coat made from animals pelt. " + TT_COMMON + " and provides warmth."
constant TT_ARMOR  = "A coat reinforced with metals. " + TT_COMMON + " and provides warmth."

constant ABIL_ELK    = commaList(ABILITY_STR_BONUS_2, ABILITY_INT_BONUS_2, ABILITY_ARMOR_BONUS_1)
constant ABIL_WOLF   = commaList(ABILITY_STR_BONUS_3, ABILITY_INT_BONUS_2, ABILITY_ARMOR_BONUS_2)
constant ABIL_WOLF_VORACITY   = commaList(ABILITY_WOLFS_VORACITY_COAT_ACTIVE, ABILITY_STR_BONUS_6, ABILITY_AGI_BONUS_6, ABILITY_ARMOR_BONUS_4)
constant ABIL_BEAR   = commaList(ABILITY_STR_BONUS_6, ABILITY_INT_BONUS_4, ABILITY_ARMOR_BONUS_3)
constant ABIL_BEAR_PRESENCE   = commaList(ABILITY_STR_BONUS_12, ABILITY_ARMOR_BONUS_6, ABILITY_BEARS_PRESENCE_AURA, ABILITY_SPIRIT_BEAST)
constant ABIL_BONE   = commaList(ABILITY_STR_BONUS_3, ABILITY_INT_BONUS_4, ABILITY_ARMOR_BONUS_2)
constant ABIL_IRON   = commaList(ABILITY_STR_BONUS_4, ABILITY_INT_BONUS_6, ABILITY_ARMOR_BONUS_3)
constant ABIL_STEEL  = commaList(ABIL_CAST_STEEL, ABILITY_STR_BONUS_8, ABILITY_INT_BONUS_8, ABILITY_ARMOR_BONUS_5)
constant ABIL_BATTLE = commaList(ABIL_CAST_BATTLE, ABIL_STATS_BATTLE , ABILITY_ARMOR_BONUS_7, ABIL_SPELL_RESISTANCE_BATTLE)
constant ABIL_ROBE_OF_THE_MAGI =commaList(ABILITY_INT_BONUS_10, ABILITY_ARMOR_BONUS_3)
constant ABIL_SCALE  = commaList(ABIL_STATS_BATTLE , ABILITY_ARMOR_BONUS_10, ABIL_HARDENED_SCALE)
constant ABIL_MAKRURA_CUIRASS = commaList(ABILITY_MAKRURA_CUIRASS_ACTIVE, ABILITY_STR_BONUS_8 , ABILITY_ARMOR_BONUS_3, ABILITY_MAKRURA_CUIRASS_ARMOR_PASSIVE)

public constant TT_ELK_SKIN_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_2   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_1   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_1 , "DataA1").color(COLOR_GREEN)
) + TT_BASIC

public constant TT_WOLF_SKIN_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_3   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_2   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_2 , "DataA1").color(COLOR_GREEN)
) + TT_BASIC

public constant TT_WOLF_VORACITY_COAT = "" +
    "A coat imbued with voracity of a Dire Wolf. "+
    "Allows wearer to consume raw meat, and to consume corpses instantly.  " +
    "\nUse this item to consume raw meat instantly restoring".color(COLOR_GOLD_STR) + MEAT_HEAL.toString().color(COLOR_GREEN)+" health.".color(COLOR_GOLD_STR) +
    ("\n+{0} Armor"+
    "\n+{1} Strength" +
    "\n+{2} Agility"
    )
    .format(
    getAbilityDataField(ABILITY_ARMOR_BONUS_4 , "DataA1").color(COLOR_GREEN),    
    getAbilityDataField(ABILITY_STR_BONUS_6   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_AGI_BONUS_6   , "DataA1").color(COLOR_GREEN)
    
) 

public constant TT_BEAR_SKIN_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_6   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_4   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_3 , "DataA1").color(COLOR_GREEN)
) + TT_BASIC

public constant TT_BEAR_PRESENCE_COAT = "" +
    ("A coat made out of a hide of ancient bear.|n"+
    "Animals will freeze in your terrifying presence.|n" +
    "Enemies shaken with fear suffer 20% damage penalty.|n" +
    "+{0} Strength.|n" +
    "+{1} Armor."
    )
    .format(
    getAbilityDataField(ABILITY_STR_BONUS_12  , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_6 , "DataA1").color(COLOR_GREEN)
) 

public constant TT_BONE_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_3   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_4   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_2 , "DataA1").color(COLOR_GREEN)
)

public constant TT_IRON_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_4   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_6   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_3 , "DataA1").color(COLOR_GREEN)
)

public constant TT_STEEL_COAT = TT_SKIN.format(
    getAbilityDataField(ABILITY_STR_BONUS_8   , "DataC1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_INT_BONUS_8   , "DataB1").color(COLOR_GREEN),
    getAbilityDataField(ABILITY_ARMOR_BONUS_5 , "DataA1").color(COLOR_GREEN)
) + " Can cast " + "Cure All".color(COLOR_GREEN) + " on wearer." + makeToolTipCooldown(90)

public constant TT_MAKRURA_CUIRASS =""+
    "A large Makruru carapace, which can be used as a cuirass. "+
    "\n+{0} Armor ".format(getAbilityDataField(ABILITY_ARMOR_BONUS_3 , "DataA1").color(COLOR_GREEN)) +
    "\n+{0} Strength ".format(getAbilityDataField(ABILITY_STR_BONUS_8   , "DataC1").color(COLOR_GREEN)) +
    "\n"+MAKRURA_BUFF_TT

public constant TT_BATTLE_ARMOR = "" +
    ("A coat embedded with a protective mana layer. Increase all stats by {0}, "+
    "Armor by {1} and provides {2} magic resistance. "+
    "Can cast Anti-Magic on nearby allied heroes.")
    .format(
        4..toToolTipGreen(), 
        getAbilityDataField(ABILITY_ARMOR_BONUS_7 , "DataA1").color(COLOR_GREEN),
        BATTLE_ARMOR_SPELL_RESISTANCE_FACTOR.toToolTipBlue()
    )+
    makeToolTipCooldown(BATTLE_COOLDOWN)

public constant TT_ROBE_OF_THE_MAGI ="" +
    "A robe belonging to a great magi of old"+
    "\n\nIntelligence +"+"10".color(COLOR_GREEN)+
    "\nArmor +"+"3".color(COLOR_GREEN)

public constant TT_SCALE_COAT = "" +
    ("A coat embedded with the scale of the Great Hydra. "+
    "Increase all stats by {0}, Armor by {1} and returns {2} melee damage received.")
    .format(
        2..toToolTipGreen(),
        getAbilityDataField(ABILITY_ARMOR_BONUS_10 , "DataA1").color(COLOR_GREEN),
        SCALE_COAT_RETURN_DAMAGE_FACTOR.toToolTipPurple()
    )

@compiletime function createCoatAbilities()
    createItemBerserkCast(ABIL_CAST_BATTLE)
        ..setName("Battle Armor Cast")
        ..setCooldown(1, BATTLE_COOLDOWN)

    createItemBerserkCast(ABIL_CAST_STEEL)
        ..setName("Steel Coat Cast")
        ..setCooldown(1, STEEL_COOLDOWN)

    createItemBerserkCast(ABILITY_WOLFS_VORACITY_COAT_ACTIVE)
    ..setName("Consume Raw Meat")
    ..setCooldown(1, 0)        

    new AbilityDefinitionCryptLordSpikedCarapace(ABIL_HARDENED_SCALE)
        ..setDefenseBonus(1, 0)
        ..setLevels(1)
        ..setReceivedDamageFactor(1, SCALE_COAT_RETURN_DAMAGE_FACTOR)
        ..setHeroAbility(false)
        ..setItemAbility(true)
        ..setName("Hydra Hardened Scale")
        ..setEditorSuffix("(Wurst)")

    new AbilityDefinitionRunedBracers(ABIL_SPELL_RESISTANCE_BATTLE)
        ..setDamageReduction(1, BATTLE_ARMOR_SPELL_RESISTANCE_FACTOR)
        ..setName("Battle Armor Spell Damage Reduction")
        ..setEditorSuffix("(Wurst)")

    new StatBonusAbility(ABIL_STATS_BATTLE , "Battle Armor" , 4, 4, 4)

    new AbilityDefinitionItemAuraCommand(ABILITY_BEARS_PRESENCE_AURA)       
        ..setAreaofEffect(1, 300)
        ..setLevels(1)
        ..setAttackDamageIncrease(1, -.2)
        ..setTargetsAllowed(1, commaList(
                TargetsAllowed.enemies,
                TargetsAllowed.ground,
                TargetsAllowed.organic,
                TargetsAllowed.vulnerable
            ))

public constant ITEM_ELK_SKIN_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_ELK_SKIN_COAT_DUMMY_UNIT")
public constant ITEM_ELK_SKIN_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_ELK_SKIN_COAT)
        ..setInterfaceIcon(LocalIcons.bTNElkHideCoat)
        ..setModelUsed(LocalItems.skinCoat)
        ..setNameEnhance("Elk Skin Coat")
        ..setTooltipExtended(TT_ELK_SKIN_COAT)
        ..setDescription(TT_ELK_SKIN_COAT)
        ..setLumberCost(27)
        ..setTintingColor1Red(136)
        ..setTintingColor2Green(0)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_ELK)
        ..constructItemShopDummyUnit(ITEM_ELK_SKIN_COAT_DUMMY_UNIT)
        )

public constant ITEM_WOLF_SKIN_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_WOLF_SKIN_COAT_DUMMY_UNIT")
public constant ITEM_WOLF_SKIN_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_WOLF_SKIN_COAT)
        ..setInterfaceIcon(LocalIcons.bTNWolfHideCoat)
        ..setModelUsed(LocalItems.skinCoat)
        ..setNameEnhance("Wolf Skin Coat")
        ..setTooltipExtended(TT_WOLF_SKIN_COAT)
        ..setDescription(TT_WOLF_SKIN_COAT)
        ..setLumberCost(32)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(255)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_WOLF)
        ..constructItemShopDummyUnit(ITEM_WOLF_SKIN_COAT_DUMMY_UNIT)
        )

public constant ITEM_WOLF_VORACITY_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_WOLF_VORACITY_COAT_DUMMY_UNIT")
public constant ITEM_WOLF_VORACITY_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_WOLF_VORACITY_COAT)
        ..setInterfaceIcon(LocalIcons.bTNChestOfWolfVoracity)
        ..setModelUsed(LocalItems.coatOfWolfVoracity)
        ..setNameEnhance("Coat of Wolf's Voracity")
        ..setTooltipExtended(TT_WOLF_VORACITY_COAT)
        ..setDescription(TT_WOLF_VORACITY_COAT)
        ..setLumberCost(45)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(255)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.25)
        ..setAbilities(ABIL_WOLF_VORACITY)
        ..setCooldownGroup(toRawCode(ABILITY_WOLFS_VORACITY_COAT_ACTIVE))
        ..constructItemShopDummyUnit(ITEM_WOLF_VORACITY_COAT_DUMMY_UNIT)
        )


public constant ITEM_BEAR_SKIN_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_BEAR_SKIN_COAT_DUMMY_UNIT")
public constant ITEM_BEAR_SKIN_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_BEAR_SKIN_COAT)
        ..setInterfaceIcon(LocalIcons.bTNBearHideCoat)
        ..setModelUsed(LocalItems.skinCoat)
        ..setNameEnhance("Bear Skin Coat")
        ..setTooltipExtended(TT_BEAR_SKIN_COAT)
        ..setDescription(TT_BEAR_SKIN_COAT)
        ..setLumberCost(38)
        ..setTintingColor1Red(139)
        ..setTintingColor2Green(6)
        ..setTintingColor3Blue(19)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_BEAR)
        ..constructItemShopDummyUnit(ITEM_BEAR_SKIN_COAT_DUMMY_UNIT)
        )

public constant ITEM_BEAR_PRESENCE_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_BEAR_PRESENCE_COAT_DUMMY_UNIT")
public constant ITEM_BEAR_PRESENCE_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_BEAR_PRESENCE_COAT)
        ..setInterfaceIcon(LocalIcons.bTNCoatOfBearPresence)
        ..setModelUsed(LocalItems.coatOfBearPresence)
        ..setNameEnhance("Coat of bear's terrifying presence")
        ..setTooltipExtended(TT_BEAR_PRESENCE_COAT)
        ..setDescription(TT_BEAR_PRESENCE_COAT)
        ..setLumberCost(86)      
        ..setTintingColor1Red(150 )
        ..setTintingColor2Green(150 )
        ..setTintingColor3Blue(150 )
        ..setScalingValue(1.25)
        ..setAbilities(ABIL_BEAR_PRESENCE)
        ..constructItemShopDummyUnit(ITEM_BEAR_PRESENCE_COAT_DUMMY_UNIT)
        )

public constant ITEM_BONE_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_BONE_COAT_DUMMY_UNIT")
public constant ITEM_BONE_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_BONE_COAT)
        ..setInterfaceIcon(LocalIcons.bTNBoneCoat)
        ..setModelUsed(LocalItems.boneCoat)
        ..setNameEnhance("Bone Coat")
        ..setTooltipExtended(TT_BONE_COAT)
        ..setDescription(TT_BONE_COAT)
        ..setLumberCost(47)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(255)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_BONE)
        ..constructItemShopDummyUnit(ITEM_BONE_COAT_DUMMY_UNIT)
        )

public constant ITEM_IRON_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_IRON_COAT_DUMMY_UNIT")
public constant ITEM_IRON_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_IRON_COAT)
        ..setInterfaceIcon(Icons.bTNImprovedMoonArmor)
        ..setModelUsed(LocalItems.armor)
        ..setNameEnhance("Iron Coat")
        ..setTooltipExtended(TT_IRON_COAT)
        ..setDescription(TT_IRON_COAT)
        ..setLumberCost(63)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(255)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_IRON)
        ..constructItemShopDummyUnit(ITEM_IRON_COAT_DUMMY_UNIT)
        )

public constant ITEM_STEEL_COAT_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_STEEL_COAT_DUMMY_UNIT")
public constant ITEM_STEEL_COAT_DEFINITION = compiletime(new CustomItemDefinition(ITEM_STEEL_COAT)
        ..setInterfaceIcon(Icons.bTNAdvancedMoonArmor)
        ..setModelUsed(LocalItems.armor)
        ..setNameEnhance("Steel Coat")
        ..setTooltipExtended(TT_STEEL_COAT)
        ..setDescription(TT_STEEL_COAT)
        ..setLumberCost(68)
        ..setTintingColor1Red(0)
        ..setTintingColor2Green(119)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_STEEL)
        ..setCooldownGroup(ABIL_STEEL)
        ..constructItemShopDummyUnit(ITEM_STEEL_COAT_DUMMY_UNIT)
        )

public constant ITEM_MAKRURA_CUIRASS_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_MAKRURA_CUIRASS_DUMMY_UNIT")
public constant ITEM_MAKRURA_CUIRASS_DEFINITION = compiletime(new CustomItemDefinition(ITEM_MAKRURA_CUIRASS)
        ..setInterfaceIcon(Icons.bTNNagaArmorUp3)
        ..setModelUsed(LocalItems.makruraCuirass)
        ..setNameEnhance("Makruru Cuirass")
        ..setTooltipExtended(TT_MAKRURA_CUIRASS)
        ..setDescription(TT_MAKRURA_CUIRASS)
        ..setLumberCost(30)
        //..setTintingColor1Red(255)
        //..setTintingColor2Green(0)
        //..setTintingColor3Blue(128)
        ..setScalingValue(1.)
        ..setAbilities(ABIL_MAKRURA_CUIRASS)
        ..setCooldownGroup(ABIL_MAKRURA_CUIRASS)
        ..constructItemShopDummyUnit(ITEM_MAKRURA_CUIRASS_DUMMY_UNIT)
        )

public constant ITEM_BATTLE_ARMOR_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_BATTLE_ARMOR_DUMMY_UNIT")
public constant ITEM_BATTLE_ARMOR_DEFINITION = compiletime(new CustomItemDefinition(ITEM_BATTLE_ARMOR)
        ..setInterfaceIcon(Icons.bTNNagaArmorUp2)
        ..setModelUsed(LocalItems.armor)
        ..setNameEnhance("Battle Armor")
        ..setTooltipExtended(TT_BATTLE_ARMOR)
        ..setDescription(TT_BATTLE_ARMOR)
        ..setLumberCost(66)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(0)
        ..setTintingColor3Blue(128)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_BATTLE)
        ..setCooldownGroup("AIms")
        ..constructItemShopDummyUnit(ITEM_BATTLE_ARMOR_DUMMY_UNIT)
        )

public constant ITEM_ROBE_OF_THE_MAGI_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_ROBE_OF_THE_MAGI_DUMMY_UNIT")
public constant ITEM_ROBE_OF_THE_MAGI_DEFINITION = compiletime(new CustomItemDefinition(ITEM_ROBE_OF_THE_MAGI)
        ..setInterfaceIcon(Icons.bTNRobeOfTheMagi)
        ..setModelUsed(LocalItems.armor)
        ..setNameEnhance("Robe of the Magi")
        ..setTooltipExtended(TT_ROBE_OF_THE_MAGI)
        ..setDescription(TT_ROBE_OF_THE_MAGI)
        ..setLumberCost(66)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(0)
        ..setTintingColor3Blue(128)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_ROBE_OF_THE_MAGI)
        ..setCooldownGroup("AIms")
        ..constructItemShopDummyUnit(ITEM_ROBE_OF_THE_MAGI_DUMMY_UNIT)
        )

public constant ITEM_HARDEN_SCALES_DUMMY_UNIT = UNIT_ID_GEN.next()..registerObjectID("ITEM_HARDEN_SCALES_DUMMY_UNIT")
public constant ITEM_HARDEN_SCALES_DEFINITION = compiletime(new CustomItemDefinition(ITEM_HARDEN_SCALES)
        ..setInterfaceIcon(Icons.bTNNagaArmorUp3)
        ..setModelUsed(LocalItems.hydraCoat)
        ..setNameEnhance("Hydra Scale Coat")
        ..setTooltipExtended(ARTIFACT_PREFIX + TT_SCALE_COAT)
        ..setDescription(ARTIFACT_PREFIX + TT_SCALE_COAT)
        ..setLumberCost(156)
        ..setTintingColor1Red(255)
        ..setTintingColor2Green(255)
        ..setTintingColor3Blue(255)
        ..setScalingValue(1.5)
        ..setAbilities(ABIL_SCALE)
        ..constructItemShopDummyUnit(ITEM_HARDEN_SCALES_DUMMY_UNIT)
        )

init
    EventListener.onCast(ABIL_CAST_BATTLE) (unit caster) ->
        let caster = GetSpellAbilityUnit()

        forUnitsInRange(caster.getPos(), ABILITY_RADIUS) u ->
            if u.isTroll() and u.getOwner().isAllyOf(caster.getOwner())
                InstantDummyCaster.castTarget(caster.getOwner(), ABILITY_BATTLE_ARMOR_ANTI_MAGIC, 1, Orders.antimagicshell, u)

    EventListener.onCast(ABIL_CAST_STEEL) (unit caster) ->
        InstantDummyCaster
            .castTarget(caster.getOwner(), ABILITY_CURE_ALL, 1, Orders.autodispel, caster)
