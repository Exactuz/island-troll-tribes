package MagicTree

// Standard library imports:
import AbilityObjEditing
import HashMap
import ClosureEvents
import ObjectIdGenerator
import ClosureTimers
import ChannelAbilityPreset
import ObjEditingUtils
import OnUnitEnterLeave

// Local imports:
import LocalObjectIDs
import HealingItems
import Panic
import StringBuilder
import ToolTipsUtils
import LocalAssets
import ObjectIds
import ItemIds
import HealingSystem
import Orders
import UnitExtensions
import HashList
import UnitIds
import DestructableObjEditing

/*
@compiletime function create_w3b_B001()
	let def = createObjectDefinition("w3b", DEST_MAGIC_TREE, 'ATtr')
	..setUnreal("bhps", 120.0)
	..setString("bnam", "Magic Tree")
	..setString("bfil", "Models\\PalmTree.mdl")
	..setInt("bvar", 1)
	..setString("btxf", "")
*/
@compiletime function createMagicTreeDestructable()
    new DestructableDefinition(DEST_MAGIC_TREE, 'ATtr')
    ..setName("Magic Tree")
    ..setModel("Models\\PalmTree.mdl")




@compiletime function createBuildingTree()
    new BuildingDefinition(UNIT_BUILDING_MAGIC_TREE, UnitIds.scouttower)
        ..setNormalAbilities("")
        ..setModelFile("Doodads\\Cinematic\\EyeOfSargeras\\EyeOfSargeras.mdl")
        ..setName("Building Tree")


class MagicTree
    unit treeBuilder
    destructable tree
    CallbackPeriodic cb

    construct(unit treeBuilder)
        let pos =treeBuilder.getPos()
        treeBuilder.remove()
        tree = createDestructable('B001', pos, angle(0), 1.35, 0)
        tree.setOccluderHeight(0.)
        tree.setLife(360.)
        cb =doPeriodically(60) (CallbackPeriodic cb) ->
            if not tree.isAliveTrick()
                destroy this
            CreateItem(ITEM_COCONUT, pos.x+GetRandomReal(-100, 100), pos.y+GetRandomReal(-100, 100))

    ondestroy
        destroy cb
            
            






init
    registerPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)->
        if GetConstructedStructure().getTypeId() == UNIT_BUILDING_MAGIC_TREE
            new MagicTree(GetTriggerUnit())



   

