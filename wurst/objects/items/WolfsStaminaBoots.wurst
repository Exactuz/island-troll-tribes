package WolfsStaminaBoots

// Standard library imports:
import AbilityObjEditing
import DamageEvent
import HashMap
import ClosureEvents
import ClosureTimers
import ObjectIdGenerator
import ObjectIds
import BuffObjEditing


// Local imports:
import AbilityObjectCreationUtils
import LocalObjectIDs
import Panic
import StringBuilder
import ToolTipsUtils
import UnitExtensions
import BuffIds

constant ABILITY_WOLFS_STAMINA_BOOTS_PANIC = compiletime(ABIL_ID_GEN.next())
//constant SPELLBOOK_ABILITY_ID = compiletime(createHiddenSpellbookWithAbilities(toRawCode(ABILITY_WOLFS_STAMINA_BOOTS_PANIC)))

let TT = new StringBuilder()
    ..add(
        "Causes your troll to go into a panic, making him move {0} faster " +
        "and attack {1} faster.|n"
    )
    ..add(makeToolTipDuration(DURATION, COOLDOWN))
    ..add(
        "Tip: Use this as often as possible to maximize efficiency.",
        colorA(255, 255, 201, 255)
    )

    .build()
    .format(
        MS_FACTOR.toToolTipOrange(),
        AS_FACTOR.toToolTipOrange()
    )

@compiletime function createPanic() returns AbilityDefinitionBerserk
    return new AbilityDefinitionBerserk(ABILITY_WOLFS_STAMINA_BOOTS_PANIC)
        ..setButtonPositionNormalX(2)
        ..setCooldown(1, COOLDOWN)
        ..setManaCost(1, 0)
        ..setMovementSpeedIncrease(1, MS_FACTOR)
        ..setAttackSpeedIncrease(1, AS_FACTOR)
        ..setBuffs(1, commaList(BUFF_WOLFS_STAMINA_BOOTS_PANIC))
        // Use a damage listener to handle this.
        ..setDamageTakenIncrease(1, 0)
        ..setDurationNormal(1, DURATION)
        ..setDurationHero(1, DURATION)
        ..setHotkeyNormal("N")
        ..setName("Panic")
        ..setTooltipNormal(1, makeToolTipNorm("N", "Panic"))
        ..setTooltipNormalExtended(1, TT)

@compiletime function createPanicBuff() returns BuffDefinition
    return new BuffDefinition(BUFF_WOLFS_STAMINA_BOOTS_PANIC, BuffIds.berserk)

class WolfsStaminaBootsInstance
    private unit wearer
    private real baseClock

    construct(unit wearer)
        this.wearer = wearer
        this.baseClock = 0
        wearer.removeAbility(ABILITY_PANIC)
        wearer.addAbility(ABILITY_WOLFS_STAMINA_BOOTS_PANIC)

    ondestroy
        wearer.removeAbility(ABILITY_WOLFS_STAMINA_BOOTS_PANIC)
        wearer.addAbility(ABILITY_PANIC)

IterableMap<unit, WolfsStaminaBootsInstance> instances = new IterableMap<unit, WolfsStaminaBootsInstance>()

function onPickupBoots(unit u)
    if u.isTroll()
        if not instances.has(u)
            instances.put(u, new WolfsStaminaBootsInstance(u))


function onDropBoots(unit u)
    if instances.has(u)
        destroy instances.getAndRemove(u)

init
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
        if GetManipulatedItem().getTypeId() == ITEM_WOLFS_STAMINA_BOOTS
            onPickupBoots(GetManipulatingUnit())


    EventListener.add(EVENT_PLAYER_UNIT_DROP_ITEM) ->
        if GetManipulatedItem().getTypeId() == ITEM_WOLFS_STAMINA_BOOTS
            onDropBoots(GetManipulatingUnit())
