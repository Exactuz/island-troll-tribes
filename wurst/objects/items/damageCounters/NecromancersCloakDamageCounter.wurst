package NecromancersCloakDamageCounter

import ChannelAbilityPreset
import LocalObjectIDs
import Lodash
import Assets
import ToolTipsUtils
import ClosureEvents
import BuffObjEditing
import ClosureTimers
import ColorUtils
import Tribe
import PlayerExtensions
import DamageEvent
import LinkedList
import HashMap
import UnitExtensions
import InstantDummyCaster
import DamageListeners
import Pets
import CloaksDefinition
import LocalAssets


public IterableMap<item, NecromancersDamageCounter> instances = new IterableMap<item, NecromancersDamageCounter>()

class NecromancersDamageCounter
    string default_TT
    unit currentOwner = null
    real totalDamageDealt = 0
    item itm = null
    construct(item _itm , unit owner)
        itm = _itm
        default_TT=itm.getExtendedTooltip()
        updateOwner(owner)
    
    function updateOwner(unit owner)
        currentOwner = owner
        updateTooltip()
            

    function updateTooltip()
        let NEW_TT = default_TT+("\nPost mitigation damage dealt: "+totalDamageDealt.toInt().toString()).color(COLOR_GOLD)
        itm.setExtendedTooltip(NEW_TT)

    function onDamage(unit source, unit target, real amount)
        totalDamageDealt+=amount
        updateTooltip()
    
    function getTotalDamageDealt() returns real
        return totalDamageDealt

    function setTotalDamageDealt(real dmg)
        totalDamageDealt = dmg
    
    function onDrop()
        currentOwner = null


function onPickup(unit u, item itm)
    let instance = instances.get(itm)
    if instance == null
        instances.put(itm, new NecromancersDamageCounter(itm, u))
    else 
        instance.updateOwner(u)

function onDrop(unit u, item itm)
    let instance = instances.get(itm)
    if instance == null
        return
    instance.onDrop()


function onDamage(unit source, unit target, real amount, unit u)
    int itemId = 0
    if u.getTypeId() == UNIT_GREATER_SKELETON
        itemId = ITEM_EMPOWERED_NECROMANCERS_CLOAK
    if u.getTypeId() == UNIT_LOCUST_SKELETON
        itemId = ITEM_NECROMANCERS_CLOAK
    let owner = source.getOwner().getTroll()
    let instance = instances.get(owner.getItemById(itemId))
    if instance == null
        return
    instance.onDamage(owner,  target,  amount)



init
    EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM)->
        if (EventData.getManipulatedItem().getTypeId() == ITEM_NECROMANCERS_CLOAK or EventData.getManipulatedItem().getTypeId() == ITEM_EMPOWERED_NECROMANCERS_CLOAK) 
            and EventData.getManipulatingUnit().isTroll()
            onPickup(GetManipulatingUnit(), GetManipulatedItem())


    DamageEvent.addListener(DamageListenerPriorities.PANTHER_INSTINCT castTo int) ->
        if DamageEvent.getSource().getTypeId() == UNIT_GREATER_SKELETON or DamageEvent.getSource().getTypeId() == UNIT_LOCUST_SKELETON
            and (DamageEvent.getTarget().isTroll() or (DamageEvent.getTarget().isPet()and DamageEvent.getTarget().isEnemyOf(DamageEvent.getTarget().getOwner())))
            onDamage(DamageEvent.getSource(), DamageEvent.getTarget(), DamageEvent.getAmount(), DamageEvent.getSource())    


