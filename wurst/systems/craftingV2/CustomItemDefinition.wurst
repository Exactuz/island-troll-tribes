package CustomItemDefinition

// Standard Libs Imports:
import Assets
import ChannelAbilityPreset

// Local Imports
import Items
import LocalAssets
import LocalItemObjEditing
import LocalObjectIDs
import ToolTipsUtils
import initlater BasicMaterials
import CustomItemType
import initlater ItemShopDummyUnit

        
public class CustomItemDefinition extends ItemDefinition
    int itemId
    int itemShopDummyUnitId
    int strengthBonus =0    
    int agilityBonus =0
    int intelligenceBonus =0
    int armorBonus =0
    int damageBonus =0
    int attackSpeedBonus =0
    int hpBonus =0
    int mpBonus =0
    int stockMaximum = 1
    int stockReplenishInterval = 120
    int lumberCost
    int numberOfCharges = 1
    bool preventBeingCraftedAsIngridient = false
    string iconPath
    string modelPath
    string TT_EXTENDED
    string TT_NAME
    string abilities
    real scalingValue
    ItemShopDummyUnitDefinition itemShopDummyUnitDefinition

    construct(int itemId)
        super(itemId, 'bspd')
        this.itemId = itemId
        this.setGoldCost(0)
        this.setDroppedWhenCarrierDies(true)
        this.setHotkey("")
        this.setLevel(0)
        this.setHitPoints(75)
        this.setClassification("Permanent")
        this.setMaxStack(0)
        this.setAbilities("")
        this.setStockReplenishInterval(120)

    construct(int itemId, int baseItem)
        super(itemId, baseItem)
        this.itemId = itemId
        this.setGoldCost(0)
        this.setDroppedWhenCarrierDies(true)
        this.setHotkey("")
        this.setLevel(0)
        this.setHitPoints(75)
        this.setClassification("Permanent")
        this.setMaxStack(0)
        this.setAbilities("")
        this.setStockReplenishInterval(120)
/*
    construct(int itemId, int itemShopDummyUnitId)
        super(itemId, 'bspd')
        this.itemShopDummyUnitId = itemShopDummyUnitId
        this.itemId = itemId
        this.setGoldCost(0)
        this.setDroppedWhenCarrierDies(true)
        this.setHotkey("")
        this.setLevel(0)
        this.setHitPoints(75)
        this.setClassification("Permanent")
        this.setMaxStack(0)
        this.setAbilities("")
        this.setStockReplenishInterval(120)
*/
    function constructItemShopDummyUnit(int itemShopDummyUnitId)
        itemShopDummyUnitDefinition = new ItemShopDummyUnitDefinition(itemShopDummyUnitId, lumberCost, stockMaximum, stockReplenishInterval, TT_NAME, TT_EXTENDED, iconPath)

    override function setInterfaceIcon(string data)
        iconPath = data
        def.setString("iico", data)

    override function setModelUsed(string data)
        modelPath = data
        def.setString("ifil", data)
    
    override function setName(string data)
        TT_NAME = data
        def.setString("unam", data)
        this.setTooltipBasic("Purchase " + data)

    override function setTooltipExtended(string data)
        TT_EXTENDED = data
        def.setString("utub", data)  
        this.setDescription(data)

    override function setNumberofCharges(int data)
        this.setItemUsable()
        numberOfCharges = data
        def.setInt("iuse", data)

    override function setLumberCost(int data)
        lumberCost = data
        def.setInt("ilum", data)
    
    function setTintingColorRGB(int red, int blue, int green)
        this.setTintingColor1Red(red)
        this.setTintingColor3Blue(blue)
        this.setTintingColor2Green(green)

    override function setScalingValue(real data)
        scalingValue = data
        def.setReal("isca", data)

    override function setAbilities(string data)
        abilities = data
        this.setItemUsable()
        def.setString("iabi", data)

    override function setStockMaximum(int data)
        stockMaximum = data
        def.setInt("isto", data)

    function setItemPerishable()
        setItemUsable()
        this.setPerishable(true)
        this.setNumberofCharges(numberOfCharges)
        // Used for omnitower cast
        this.setClassification("Charged")        

    function setItemUsable()
        this.setActivelyUsed(true)
        this.setIgnoreCooldown(false)