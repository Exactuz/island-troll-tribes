package MixingV2

// Standard library imports:
import LinkedList
import RegisterEvents

// Local imports:
import HashMap
import LocalObjectIDs
import UnitExtensions
import HashList
import IdListConstant



IterableMap<item, int> herbs = new IterableMap<item, int>()
IterableMap<item, int> usedHerbs = new IterableMap<item, int>()


public function mix(unit caster, HashList<item> cashedItems, HashList<item> cashedOwnedItems) returns item
    let count = caster.getInventoryItemCountMap()
    let inventory = caster.getInventory()
    int specTypes = 0
    IterableMap<item, int> herbs = new IterableMap<item, int>()
    IterableMap<item, int> usedHerbs = new IterableMap<item, int>()
    for each in cashedItems
        let itemId = each.getTypeId()
        if HERB_LIST.has(itemId)
            herbs.put(each, ITEM_BLUE_HERB)

    let blue = count.get(ITEM_BLUE_HERB)
    let oran = count.get(ITEM_ORANGE_HERB)
    let purp = count.get(ITEM_PURPLE_HERB)
    let yell = count.get(ITEM_YELLOW_HERB)

    let root = count.get(ITEM_RIVER_ROOT)
    let stem = count.get(ITEM_RIVER_STEM)
    let athelas = count.get(ITEM_ATHELAS_SEED)

    let specCount = blue + oran + purp + yell
    let pos = caster.getPos()

    if count.get(ITEM_BLUE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_ORANGE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_PURPLE_HERB) > 0
        specTypes += 1
    if count.get(ITEM_YELLOW_HERB) > 0
        specTypes += 1

    item itm = null
    // Essence of Bees
    if specTypes > 2  and specCount > 3
        itm = createItem(ITEM_ESSENCE_BEES, pos)
        return itm

    // Twin Islands
    if (yell > 2 and blue > 2) or (oran > 2 and purp > 2)
        itm = createItem(ITEM_POTION_TWIN_ISLANDS, pos)
        return itm

    // Nether
    if specCount > 0 and stem > 1 and athelas > 1
        itm = createItem(ITEM_NETHER_POTION, pos)
        return itm

    // Drunk
    if specCount > 0 and root > 0 and athelas > 1
        itm = createItem(ITEM_DRUNKS_POTION, pos)
        return itm

    // Fervor
    if specCount > 2 and specTypes > 1 and athelas > 0
        itm = createItem(ITEM_FERVOR_POTION, pos)
        return itm

    // Acid Bomb
    if specTypes > 1 and specCount > 3 and stem > 1
        itm = createItem(ITEM_ACID_BOMB, pos)
        return itm

    // Bee Hive
    if specCount > 0 and stem > 1
        itm = createItem(ITEM_BEE_HIVE, pos)
        return itm

    // Omnicure
    if athelas > 1 and specTypes > 1
        itm = createItem(ITEM_OMNICURE, pos)
        return itm

    // Oracle
    if athelas > 1 and specCount > 0
        itm = createItem(ITEM_ORACLE_POTION, pos)
        return itm


    // Gem Of Knowledge
    if specTypes >= 2 and specCount >= 4
        itm = createItem(ITEM_GEM_OF_KNOWLEDGE, pos)
        return itm

    // Anti Magic Potion
    if specCount > 0 and athelas > 0
        itm = createItem(ITEM_ANTI_MAGIC_POTION, pos)
        return itm

    return itm


/*
function matchCount()
    for each in COLOR_HERB_LIST
        


function colourCount(int herbId) returns int
    var count = 0
    for each in herbs
        let itmId = herbs.get(each)
        if itmId == herbId
            count+=1
            used

    return count

*/